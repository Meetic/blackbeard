// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2017-12-21 15:13:30.78887 +0100 CET m=+0.147840286

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "This is a REST API to manage Blackbeard. See https://github.com/Meetic/blackbeard",
        "title": "Blackbeard API",
        "contact": {
            "name": "SÃ©bastien Le gall",
            "url": "http://le-gall.bzh",
            "email": "seb@le-gall.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/defaults": {
            "get": {
                "description": "Return the content of the defaults.json file in the used playbook.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get default value for an inventory",
                "operationId": "get-defaults",
                "responses": {
                    "200": {
                        "description": "The default inventory",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/blackbeard.Inventory"
                        }
                    },
                    "404": {
                        "description": "Defaults file not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/inventories": {
            "post": {
                "description": "Create an inventory for the given namespace. This will also create the inventory file and the associated namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create an inventory",
                "operationId": "create-inventory",
                "parameters": [
                    {
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/http.createQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The inventory",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/blackbeard.Inventory"
                        }
                    },
                    "400": {
                        "description": "The inventory already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "The inventory could not be created due to communication with kubernetes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Something went wrong checking for existing inventories",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/inventories/": {
            "get": {
                "description": "Read all inventory files and return them as an array",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return the list of existing inventories",
                "operationId": "list-inventories",
                "responses": {
                    "200": {
                        "description": "List of inventories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/blackbeard.Inventory"
                            }
                        }
                    },
                    "500": {
                        "description": "Impossible to read the inventory list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/inventories/{namespace}": {
            "get": {
                "description": "Read inventory file for a given namespace and return it as a json object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return an inventory",
                "operationId": "get-inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The inventory",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/blackbeard.Inventory"
                        }
                    },
                    "404": {
                        "description": "Can not find the namespace/inventory",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Something went wrong when reading the inventory",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "blackbeard.Inventory": {
            "type": "object",
            "properties": {
                "Namespace": {
                    "type": "string"
                },
                "Values": {
                    "type": "object"
                }
            }
        },
        "http.createQuery": {
            "type": "object",
            "properties": {
                "Namespace": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
